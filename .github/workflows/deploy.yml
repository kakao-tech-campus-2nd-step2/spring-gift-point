name: CI/CD 파이프라인

on:
  push:
    branches:
      - step1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 21 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Gradle 캐시 설정
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradlew 실행 권한 부여
        run: chmod +x ./gradlew

      - name: Gradle로 빌드
        run: ./gradlew build

      - name: Docker 이미지 빌드
        run: docker build -t yugyeom/spring-gift:latest .

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Docker 이미지 푸시
        run: docker push yugyeom/spring-gift:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: Docker 권한 설정
        run: sudo chmod 666 /var/run/docker.sock

      - name: 서버에 SSH로 접속하여 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /app
            docker-compose pull
            docker-compose up -d
